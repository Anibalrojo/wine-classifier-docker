name: Build and Test Wine Classifier

on:
  push:
    branches: [ main, master ] # Trigger on pushes to main or master branch
  pull_request:
    branches: [ main, master ] # Trigger on pull requests targeting main or master

env:
  DOCKER_IMAGE_NAME: wine-classifier # Define image name once
  GCP_AR_REGISTRY_HOSTNAME: southamerica-east1-docker.pkg.dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code               # Step 1: Get repository code
        uses: actions/checkout@v4

      - name: Build Docker image          # Step 2: Build the Docker image, but do not push it yet
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

      - name: Test Docker container       # Step 3: Run the container and test its API endpoints
        run: |
          echo "Starting container..."
          # Run the container in detached mode (-d), map port 5000, and assign it a name
          docker run -d -p 5000:5000 --name test-container ${{ env.DOCKER_IMAGE_NAME }}
          echo "Waiting for container to start..."
          # Give the container some time to fully start up (adjust if needed)
          sleep 25 
          
          echo "Testing API health endpoint..."
          # Use curl to hit the health endpoint. -f ensures it fails on HTTP errors
          curl -f http://localhost:5000/ || exit 1
          echo "API health endpoint is working!"
          
          echo "Testing prediction endpoint..."
          # Use curl to hit the prediction endpoint with sample data
          curl -X POST -H "Content-Type: application/json" \
            -d '{"instances":[{"alcohol":13.2,"malic_acid":1.78,"ash":2.14,"alcalinity_of_ash":11.2,"magnesium":100,"total_phenols":2.65,"flavanoids":2.76,"nonflavanoid_phenols":0.26,"proanthocyanins":1.28,"color_intensity":4.38,"hue":1.05,"od280/od315_of_diluted_wines":3.4,"proline":1050}]}' \
            http://localhost:5000/predict || exit 1
          echo "Prediction endpoint working!"
              
          echo "Cleaning up container..."
          docker stop test-container # Stop the container
          docker rm test-container # Remove the container
          echo "All tests passed and container cleaned up!"

  push-to-registries:
    needs: build-and-test # This job will only run if the 'build-and-test' job succeeded
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' # Only push from main/master branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Authenticate and push to Docker Hub ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # This action securely logs into Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # --- Authenticate and push to Google Cloud (Artifact Registry) ---
      - name: Authenticate to Google Cloud (Artifact Registry)
        id: auth
        uses: google-github-actions/auth@v1
        with: 
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Configure Docker for Google Cloud (Artifact Registry)
        run: gcloud auth configure-docker ${{ env.GCP_AR_REGISTRY_HOSTNAME }}
        
      # --- Build and Push to both registries ---
      - name: Build and Push Docker image to Registries
        run: |
          # Rebuild image (Docker caching makes this fast)
          docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

          # Push to Docker Hub
          docker tag ${{ env.DOCKER_IMAGE_NAME }} anibalrojosan/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push anibalrojosan/${{ env.DOCKER_IMAGE_NAME }}:latest

          # Push to Google Artifact Registry
          docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{ env.GCP_AR_REGISTRY_HOSTNAME }}/wine-classifier-docker/wine-classifier-repo/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.GCP_AR_REGISTRY_HOSTNAME }}/wine-classifier-docker/wine-classifier-repo/${{ env.DOCKER_IMAGE_NAME }}:latest